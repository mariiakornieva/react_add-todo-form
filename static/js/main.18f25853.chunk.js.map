{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoForm/TodoForm.jsx","api/users.js","api/todos.js","App.js","index.js"],"names":["TodoItem","id","title","user","checked","onChange","className","type","name","htmlFor","defaultProps","TodoList","users","todos","map","todo","key","find","userId","completed","TodoForm","state","userError","userErrorMessage","titleError","titleErrorMessage","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAdd","this","onSubmit","cn","data-error","placeholder","React","Component","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","App","todoList","userList","addTodo","newTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18f25853.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TodoItem.css';\n\nexport const TodoItem = ({\n  id, title, user, checked, onChange,\n}) => (\n  <li className=\"TodoItem\">\n    <input\n      type=\"checkbox\"\n      id={id}\n      name={id}\n      className=\"TodoItem__checkbox\"\n      checked={checked}\n      onChange={onChange}\n    />\n    <label\n      htmlFor={id}\n      className=\"TodoItem__label\"\n    >\n      {`${user.name || 'User'}:  ${title}`}\n    </label>\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  title: 'Todo item',\n  checked: false,\n  user: {\n    name: 'User',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from '../TodoItem';\nimport './TodoList.css';\n\nexport const TodoList = ({\n  users, todos, onChange,\n}) => (\n  <div className=\"TodoList\">\n    <h2 className=\"TodoList__header\">\n      Todo List\n    </h2>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          user={users.find(user => user.id === todo.userId)}\n          title={todo.title}\n          checked={todo.completed}\n          onChange={onChange}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  ),\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ),\n  onChange: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  users: [],\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './TodoForm.css';\n\nexport class TodoForm extends React.Component {\n  state = {\n    userId: '',\n    userError: false,\n    userErrorMessage: 'Please select a user',\n    title: '',\n    titleError: false,\n    titleErrorMessage: 'Please enter the title',\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState(state => ({\n      [name]: value,\n      userError: name === 'userId' ? false : state.userError,\n      titleError: name === 'title' ? false : state.titleError,\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { userId, title } = this.state;\n\n    if (!title || !userId) {\n      this.setState({\n        titleError: !title,\n        userError: !userId,\n      });\n\n      return;\n    }\n\n    this.props.onAdd(userId, title);\n\n    this.setState({\n      userId: '',\n      title: '',\n    });\n  };\n\n  render() {\n    const {\n      userId, title, userError, titleError,\n      userErrorMessage, titleErrorMessage,\n    } = this.state;\n    const { users } = this.props;\n\n    return (\n      <div className=\"TodoForm\">\n        <h2 className=\"TodoForm__header\">\n          Add New Todo\n        </h2>\n\n        <form\n          className=\"TodoForm__form\"\n          onSubmit={this.handleSubmit}\n        >\n          <div\n            className={cn(\n              `TodoForm__field`, userError && 'TodoForm__field--error',\n            )}\n            data-error={userErrorMessage}\n          >\n            <select\n              name=\"userId\"\n              value={userId}\n              className=\"TodoForm__field--user\"\n              onChange={this.handleChange}\n            >\n              <option\n                key={-1}\n                value=\"\"\n                onChange={this.handleChange}\n              >\n                Choose a user\n              </option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  name=\"userId\"\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div\n            className={\n              `TodoForm__field ${titleError\n                ? 'TodoForm__field--error' : ''}`}\n            data-error={titleErrorMessage}\n          >\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              className=\"TodoForm__field--title\"\n              placeholder=\"New todo\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"TodoForm__button\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n    }),\n  ),\n  onAdd: PropTypes.func.isRequired,\n};\n\nTodoForm.defaultProps = {\n  users: [],\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n  {\n    userId: 2,\n    id: 3,\n    title: 'quis ut nam facilis et officia quiquis ut nam facilis et officia quiquis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './App.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport users from './api/users';\nimport todos from './api/todos';\n\nclass App extends React.Component {\n  state = {\n    todoList: todos,\n    userList: users.map(user => ({\n      id: user.id,\n      name: user.name,\n    })),\n  };\n\n  handleChange = (e) => {\n    const { name, checked } = e.target;\n\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => ({\n        ...todo,\n        completed: name === `${todo.id}` ? checked : todo.completed,\n      })),\n    }));\n  };\n\n  addTodo = (userId, title) => {\n    this.setState((state) => {\n      const newTodo = {\n        id: state.todoList.length + 1,\n        title,\n        userId: +userId,\n        completed: false,\n      };\n\n      return {\n        todoList: [\n          ...state.todoList,\n          newTodo,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { todoList, userList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <TodoList\n            users={userList}\n            todos={todoList}\n            onChange={this.handleChange}\n          />\n          <TodoForm\n            users={userList}\n            onAdd={this.addTodo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}